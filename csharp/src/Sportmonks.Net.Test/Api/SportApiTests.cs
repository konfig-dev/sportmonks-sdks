/*
 * SportMonks
 *
 * Surpass the competition with superior sports data
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Sportmonks.Net.Client;
using Sportmonks.Net.Api;
// uncomment below to import models
//using Sportmonks.Net.Model;

namespace Sportmonks.Net.Test.Api
{
    /// <summary>
    ///  Class for testing SportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SportApiTests : IDisposable
    {
        private SportApi instance;

        public SportApiTests()
        {
            instance = new SportApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SportApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SportApi
            //Assert.IsType<SportApi>(instance);
        }

        /// <summary>
        /// Test CoachById
        /// </summary>
        [Fact]
        public void CoachByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int coachId = null;
            //var response = instance.CoachById(version, sport, coachId);
            //Assert.IsType<SportCoachByIdResponse>(response);
        }

        /// <summary>
        /// Test CoachesAll
        /// </summary>
        [Fact]
        public void CoachesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.CoachesAll(version, sport);
            //Assert.IsType<SportCoachesAllResponse>(response);
        }

        /// <summary>
        /// Test CoachesByCountryId
        /// </summary>
        [Fact]
        public void CoachesByCountryIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int countryId = null;
            //var response = instance.CoachesByCountryId(version, sport, countryId);
            //Assert.IsType<SportCoachesByCountryIdResponse>(response);
        }

        /// <summary>
        /// Test CoachesLatest
        /// </summary>
        [Fact]
        public void CoachesLatestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.CoachesLatest(version, sport);
            //Assert.IsType<SportCoachesLatestResponse>(response);
        }

        /// <summary>
        /// Test CoachesSearch
        /// </summary>
        [Fact]
        public void CoachesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.CoachesSearch(version, sport, name);
            //Assert.IsType<SportCoachesSearchResponse>(response);
        }

        /// <summary>
        /// Test CommentariesAll
        /// </summary>
        [Fact]
        public void CommentariesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.CommentariesAll(version, sport);
            //Assert.IsType<SportCommentariesAllResponse>(response);
        }

        /// <summary>
        /// Test CommentariesByFixtureId
        /// </summary>
        [Fact]
        public void CommentariesByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.CommentariesByFixtureId(version, sport, fixtureId);
            //Assert.IsType<SportCommentariesByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test FixtureByDateRangeForTeam
        /// </summary>
        [Fact]
        public void FixtureByDateRangeForTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string startDate = null;
            //string endDate = null;
            //string teamId = null;
            //var response = instance.FixtureByDateRangeForTeam(version, sport, startDate, endDate, teamId);
            //Assert.IsType<SportFixtureByDateRangeForTeamResponse>(response);
        }

        /// <summary>
        /// Test FixtureById
        /// </summary>
        [Fact]
        public void FixtureByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.FixtureById(version, sport, fixtureId);
            //Assert.IsType<SportFixtureByIdResponse>(response);
        }

        /// <summary>
        /// Test FixturesAll
        /// </summary>
        [Fact]
        public void FixturesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.FixturesAll(version, sport);
            //Assert.IsType<SportFixturesAllResponse>(response);
        }

        /// <summary>
        /// Test FixturesByDate
        /// </summary>
        [Fact]
        public void FixturesByDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string date = null;
            //var response = instance.FixturesByDate(version, sport, date);
            //Assert.IsType<SportFixturesByDateResponse>(response);
        }

        /// <summary>
        /// Test FixturesByDateRange
        /// </summary>
        [Fact]
        public void FixturesByDateRangeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string startDate = null;
            //string endDate = null;
            //var response = instance.FixturesByDateRange(version, sport, startDate, endDate);
            //Assert.IsType<SportFixturesByDateRangeResponse>(response);
        }

        /// <summary>
        /// Test FixturesByIds
        /// </summary>
        [Fact]
        public void FixturesByIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string fixtureIds = null;
            //var response = instance.FixturesByIds(version, sport, fixtureIds);
            //Assert.IsType<SportFixturesByIdsResponse>(response);
        }

        /// <summary>
        /// Test FixturesHeadToHead
        /// </summary>
        [Fact]
        public void FixturesHeadToHeadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int firstTeam = null;
            //int secondTeam = null;
            //var response = instance.FixturesHeadToHead(version, sport, firstTeam, secondTeam);
            //Assert.IsType<SportFixturesHeadToHeadResponse>(response);
        }

        /// <summary>
        /// Test FixturesLatest
        /// </summary>
        [Fact]
        public void FixturesLatestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.FixturesLatest(version, sport);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test FixturesSearch
        /// </summary>
        [Fact]
        public void FixturesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.FixturesSearch(version, sport, name);
            //Assert.IsType<SportFixturesSearchResponse>(response);
        }

        /// <summary>
        /// Test LeagueById
        /// </summary>
        [Fact]
        public void LeagueByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int leagueId = null;
            //var response = instance.LeagueById(version, sport, leagueId);
            //Assert.IsType<SportLeagueByIdResponse>(response);
        }

        /// <summary>
        /// Test LeagueEnrichments
        /// </summary>
        [Fact]
        public void LeagueEnrichmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int leagueId = null;
            //var response = instance.LeagueEnrichments(version, sport, leagueId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LeagueShirts
        /// </summary>
        [Fact]
        public void LeagueShirtsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int leagueId = null;
            //var response = instance.LeagueShirts(version, sport, leagueId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LeaguesAll
        /// </summary>
        [Fact]
        public void LeaguesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.LeaguesAll(version, sport);
            //Assert.IsType<SportLeaguesAllResponse>(response);
        }

        /// <summary>
        /// Test LeaguesByCountryId
        /// </summary>
        [Fact]
        public void LeaguesByCountryIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int countryId = null;
            //var response = instance.LeaguesByCountryId(version, sport, countryId);
            //Assert.IsType<SportLeaguesByCountryIdResponse>(response);
        }

        /// <summary>
        /// Test LeaguesByDate
        /// </summary>
        [Fact]
        public void LeaguesByDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string date = null;
            //var response = instance.LeaguesByDate(version, sport, date);
            //Assert.IsType<SportLeaguesByDateResponse>(response);
        }

        /// <summary>
        /// Test LeaguesByTeamId
        /// </summary>
        [Fact]
        public void LeaguesByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.LeaguesByTeamId(version, sport, teamId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LeaguesCurrentByTeamId
        /// </summary>
        [Fact]
        public void LeaguesCurrentByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.LeaguesCurrentByTeamId(version, sport, teamId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test LeaguesLive
        /// </summary>
        [Fact]
        public void LeaguesLiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.LeaguesLive(version, sport);
            //Assert.IsType<SportLeaguesLiveResponse>(response);
        }

        /// <summary>
        /// Test LeaguesSearch
        /// </summary>
        [Fact]
        public void LeaguesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.LeaguesSearch(version, sport, name);
            //Assert.IsType<SportLeaguesSearchResponse>(response);
        }

        /// <summary>
        /// Test LivescoresAll
        /// </summary>
        [Fact]
        public void LivescoresAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.LivescoresAll(version, sport);
            //Assert.IsType<SportLivescoresAllResponse>(response);
        }

        /// <summary>
        /// Test LivescoresAllInPlay
        /// </summary>
        [Fact]
        public void LivescoresAllInPlayTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.LivescoresAllInPlay(version, sport);
            //Assert.IsType<SportLivescoresAllInPlayResponse>(response);
        }

        /// <summary>
        /// Test LivescoresLatest
        /// </summary>
        [Fact]
        public void LivescoresLatestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.LivescoresLatest(version, sport);
            //Assert.IsType<SportLivescoresLatestResponse>(response);
        }

        /// <summary>
        /// Test NewsAllPostMatch
        /// </summary>
        [Fact]
        public void NewsAllPostMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.NewsAllPostMatch(version, sport);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test NewsAllPreMatch
        /// </summary>
        [Fact]
        public void NewsAllPreMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.NewsAllPreMatch(version, sport);
            //Assert.IsType<SportNewsAllPreMatchResponse>(response);
        }

        /// <summary>
        /// Test NewsPostMatchBySeasonId
        /// </summary>
        [Fact]
        public void NewsPostMatchBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.NewsPostMatchBySeasonId(version, sport, seasonId);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test NewsPreMatchBySeasonId
        /// </summary>
        [Fact]
        public void NewsPreMatchBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.NewsPreMatchBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportNewsPreMatchBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test NewsUpcomingPostMatch
        /// </summary>
        [Fact]
        public void NewsUpcomingPostMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.NewsUpcomingPostMatch(version, sport);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test NewsUpcomingPreMatch
        /// </summary>
        [Fact]
        public void NewsUpcomingPreMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.NewsUpcomingPreMatch(version, sport);
            //Assert.IsType<SportNewsUpcomingPreMatchResponse>(response);
        }

        /// <summary>
        /// Test OddsAllInPlay
        /// </summary>
        [Fact]
        public void OddsAllInPlayTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.OddsAllInPlay(version, sport);
            //Assert.IsType<SportOddsAllInPlayResponse>(response);
        }

        /// <summary>
        /// Test OddsAllPreMatch
        /// </summary>
        [Fact]
        public void OddsAllPreMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.OddsAllPreMatch(version, sport);
            //Assert.IsType<SportOddsAllPreMatchResponse>(response);
        }

        /// <summary>
        /// Test OddsInPlayByFixtureAndBookmakerId
        /// </summary>
        [Fact]
        public void OddsInPlayByFixtureAndBookmakerIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //int bookmakerId = null;
            //var response = instance.OddsInPlayByFixtureAndBookmakerId(version, sport, fixtureId, bookmakerId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test OddsInPlayByFixtureAndMarketId
        /// </summary>
        [Fact]
        public void OddsInPlayByFixtureAndMarketIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //int marketId = null;
            //var response = instance.OddsInPlayByFixtureAndMarketId(version, sport, fixtureId, marketId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test OddsInPlayByFixtureId
        /// </summary>
        [Fact]
        public void OddsInPlayByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.OddsInPlayByFixtureId(version, sport, fixtureId);
            //Assert.IsType<SportOddsInPlayByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test OddsLatestInPlay
        /// </summary>
        [Fact]
        public void OddsLatestInPlayTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.OddsLatestInPlay(version, sport);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test OddsLatestPreMatch
        /// </summary>
        [Fact]
        public void OddsLatestPreMatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.OddsLatestPreMatch(version, sport);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test OddsPreMatchByFixtureAndBookmakerId
        /// </summary>
        [Fact]
        public void OddsPreMatchByFixtureAndBookmakerIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //int bookmakerId = null;
            //var response = instance.OddsPreMatchByFixtureAndBookmakerId(version, sport, fixtureId, bookmakerId);
            //Assert.IsType<SportOddsPreMatchByFixtureAndBookmakerIdResponse>(response);
        }

        /// <summary>
        /// Test OddsPreMatchByFixtureAndMarketId
        /// </summary>
        [Fact]
        public void OddsPreMatchByFixtureAndMarketIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //int marketId = null;
            //var response = instance.OddsPreMatchByFixtureAndMarketId(version, sport, fixtureId, marketId);
            //Assert.IsType<SportOddsPreMatchByFixtureAndMarketIdResponse>(response);
        }

        /// <summary>
        /// Test OddsPreMatchByFixtureId
        /// </summary>
        [Fact]
        public void OddsPreMatchByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.OddsPreMatchByFixtureId(version, sport, fixtureId);
            //Assert.IsType<SportOddsPreMatchByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test PlayerById
        /// </summary>
        [Fact]
        public void PlayerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int playerId = null;
            //var response = instance.PlayerById(version, sport, playerId);
            //Assert.IsType<SportPlayerByIdResponse>(response);
        }

        /// <summary>
        /// Test PlayersAll
        /// </summary>
        [Fact]
        public void PlayersAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.PlayersAll(version, sport);
            //Assert.IsType<SportPlayersAllResponse>(response);
        }

        /// <summary>
        /// Test PlayersByCountryId
        /// </summary>
        [Fact]
        public void PlayersByCountryIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int countryId = null;
            //var response = instance.PlayersByCountryId(version, sport, countryId);
            //Assert.IsType<SportPlayersByCountryIdResponse>(response);
        }

        /// <summary>
        /// Test PlayersLatest
        /// </summary>
        [Fact]
        public void PlayersLatestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.PlayersLatest(version, sport);
            //Assert.IsType<SportPlayersLatestResponse>(response);
        }

        /// <summary>
        /// Test PlayersSearch
        /// </summary>
        [Fact]
        public void PlayersSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.PlayersSearch(version, sport, name);
            //Assert.IsType<SportPlayersSearchResponse>(response);
        }

        /// <summary>
        /// Test PredictionsAll
        /// </summary>
        [Fact]
        public void PredictionsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.PredictionsAll(version, sport);
            //Assert.IsType<SportPredictionsAllResponse>(response);
        }

        /// <summary>
        /// Test PredictionsAllValueBets
        /// </summary>
        [Fact]
        public void PredictionsAllValueBetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.PredictionsAllValueBets(version, sport);
            //Assert.IsType<SportPredictionsAllValueBetsResponse>(response);
        }

        /// <summary>
        /// Test PredictionsByFixtureId
        /// </summary>
        [Fact]
        public void PredictionsByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.PredictionsByFixtureId(version, sport, fixtureId);
            //Assert.IsType<SportPredictionsByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test PredictionsValueBetsByFixtureId
        /// </summary>
        [Fact]
        public void PredictionsValueBetsByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.PredictionsValueBetsByFixtureId(version, sport, fixtureId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test RefereeById
        /// </summary>
        [Fact]
        public void RefereeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int refereeId = null;
            //var response = instance.RefereeById(version, sport, refereeId);
            //Assert.IsType<SportRefereeByIdResponse>(response);
        }

        /// <summary>
        /// Test RefereesAll
        /// </summary>
        [Fact]
        public void RefereesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.RefereesAll(version, sport);
            //Assert.IsType<SportRefereesAllResponse>(response);
        }

        /// <summary>
        /// Test RefereesByCountryId
        /// </summary>
        [Fact]
        public void RefereesByCountryIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int countryId = null;
            //var response = instance.RefereesByCountryId(version, sport, countryId);
            //Assert.IsType<SportRefereesByCountryIdResponse>(response);
        }

        /// <summary>
        /// Test RefereesBySeasonId
        /// </summary>
        [Fact]
        public void RefereesBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.RefereesBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportRefereesBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test RefereesSearch
        /// </summary>
        [Fact]
        public void RefereesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.RefereesSearch(version, sport, name);
            //Assert.IsType<SportRefereesSearchResponse>(response);
        }

        /// <summary>
        /// Test RivalsAll
        /// </summary>
        [Fact]
        public void RivalsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.RivalsAll(version, sport);
            //Assert.IsType<SportRivalsAllResponse>(response);
        }

        /// <summary>
        /// Test RivalsByTeamId
        /// </summary>
        [Fact]
        public void RivalsByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.RivalsByTeamId(version, sport, teamId);
            //Assert.IsType<SportRivalsByTeamIdResponse>(response);
        }

        /// <summary>
        /// Test RoundById
        /// </summary>
        [Fact]
        public void RoundByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int roundId = null;
            //var response = instance.RoundById(version, sport, roundId);
            //Assert.IsType<SportRoundByIdResponse>(response);
        }

        /// <summary>
        /// Test RoundsAll
        /// </summary>
        [Fact]
        public void RoundsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.RoundsAll(version, sport);
            //Assert.IsType<SportRoundsAllResponse>(response);
        }

        /// <summary>
        /// Test RoundsBySeasonId
        /// </summary>
        [Fact]
        public void RoundsBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.RoundsBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportRoundsBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test RoundsSearch
        /// </summary>
        [Fact]
        public void RoundsSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int name = null;
            //var response = instance.RoundsSearch(version, sport, name);
            //Assert.IsType<SportRoundsSearchResponse>(response);
        }

        /// <summary>
        /// Test SchedulesBySeasonId
        /// </summary>
        [Fact]
        public void SchedulesBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.SchedulesBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportSchedulesBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test SchedulesByTeamAndSeasonId
        /// </summary>
        [Fact]
        public void SchedulesByTeamAndSeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //int teamId = null;
            //var response = instance.SchedulesByTeamAndSeasonId(version, sport, seasonId, teamId);
            //Assert.IsType<SportSchedulesByTeamAndSeasonIdResponse>(response);
        }

        /// <summary>
        /// Test SchedulesByTeamId
        /// </summary>
        [Fact]
        public void SchedulesByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.SchedulesByTeamId(version, sport, teamId);
            //Assert.IsType<SportSchedulesByTeamIdResponse>(response);
        }

        /// <summary>
        /// Test SeasonById
        /// </summary>
        [Fact]
        public void SeasonByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.SeasonById(version, sport, seasonId);
            //Assert.IsType<SportSeasonByIdResponse>(response);
        }

        /// <summary>
        /// Test SeasonsAll
        /// </summary>
        [Fact]
        public void SeasonsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.SeasonsAll(version, sport);
            //Assert.IsType<SportSeasonsAllResponse>(response);
        }

        /// <summary>
        /// Test SeasonsByTeamId
        /// </summary>
        [Fact]
        public void SeasonsByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.SeasonsByTeamId(version, sport, teamId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SeasonsSearch
        /// </summary>
        [Fact]
        public void SeasonsSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int name = null;
            //var response = instance.SeasonsSearch(version, sport, name);
            //Assert.IsType<SportSeasonsSearchResponse>(response);
        }

        /// <summary>
        /// Test SquadsBySeasonAndTeamId
        /// </summary>
        [Fact]
        public void SquadsBySeasonAndTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //int teamId = null;
            //var response = instance.SquadsBySeasonAndTeamId(version, sport, seasonId, teamId);
            //Assert.IsType<SportSquadsBySeasonAndTeamIdResponse>(response);
        }

        /// <summary>
        /// Test SquadsByTeamId
        /// </summary>
        [Fact]
        public void SquadsByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.SquadsByTeamId(version, sport, teamId);
            //Assert.IsType<SportSquadsByTeamIdResponse>(response);
        }

        /// <summary>
        /// Test StageById
        /// </summary>
        [Fact]
        public void StageByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int stageId = null;
            //var response = instance.StageById(version, sport, stageId);
            //Assert.IsType<SportStageByIdResponse>(response);
        }

        /// <summary>
        /// Test StagesAll
        /// </summary>
        [Fact]
        public void StagesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.StagesAll(version, sport);
            //Assert.IsType<SportStagesAllResponse>(response);
        }

        /// <summary>
        /// Test StagesBySeasonId
        /// </summary>
        [Fact]
        public void StagesBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.StagesBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportStagesBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test StagesSearch
        /// </summary>
        [Fact]
        public void StagesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.StagesSearch(version, sport, name);
            //Assert.IsType<SportStagesSearchResponse>(response);
        }

        /// <summary>
        /// Test StandingCorrectionsBySeasonId
        /// </summary>
        [Fact]
        public void StandingCorrectionsBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.StandingCorrectionsBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportStandingCorrectionsBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test StandingsAll
        /// </summary>
        [Fact]
        public void StandingsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.StandingsAll(version, sport);
            //Assert.IsType<SportStandingsAllResponse>(response);
        }

        /// <summary>
        /// Test StandingsByRoundId
        /// </summary>
        [Fact]
        public void StandingsByRoundIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int roundId = null;
            //var response = instance.StandingsByRoundId(version, sport, roundId);
            //Assert.IsType<SportStandingsByRoundIdResponse>(response);
        }

        /// <summary>
        /// Test StandingsBySeasonId
        /// </summary>
        [Fact]
        public void StandingsBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.StandingsBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportStandingsBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test StandingsLiveByLeagueId
        /// </summary>
        [Fact]
        public void StandingsLiveByLeagueIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int leagueId = null;
            //var response = instance.StandingsLiveByLeagueId(version, sport, leagueId);
            //Assert.IsType<SportStandingsLiveByLeagueIdResponse>(response);
        }

        /// <summary>
        /// Test StateById
        /// </summary>
        [Fact]
        public void StateByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int stateId = null;
            //var response = instance.StateById(version, sport, stateId);
            //Assert.IsType<SportStateByIdResponse>(response);
        }

        /// <summary>
        /// Test StatesBySport
        /// </summary>
        [Fact]
        public void StatesBySportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.StatesBySport(version, sport);
            //Assert.IsType<SportStatesBySportResponse>(response);
        }

        /// <summary>
        /// Test TeamsAll
        /// </summary>
        [Fact]
        public void TeamsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.TeamsAll(version, sport);
            //Assert.IsType<SportTeamsAllResponse>(response);
        }

        /// <summary>
        /// Test TeamsByCountryId
        /// </summary>
        [Fact]
        public void TeamsByCountryIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int countryId = null;
            //var response = instance.TeamsByCountryId(version, sport, countryId);
            //Assert.IsType<SportTeamsByCountryIdResponse>(response);
        }

        /// <summary>
        /// Test TeamsById
        /// </summary>
        [Fact]
        public void TeamsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.TeamsById(version, sport, teamId);
            //Assert.IsType<SportTeamsByIdResponse>(response);
        }

        /// <summary>
        /// Test TeamsBySeasonId
        /// </summary>
        [Fact]
        public void TeamsBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.TeamsBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportTeamsBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test TeamsSearch
        /// </summary>
        [Fact]
        public void TeamsSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.TeamsSearch(version, sport, name);
            //Assert.IsType<SportTeamsSearchResponse>(response);
        }

        /// <summary>
        /// Test TopScorersBySeasonId
        /// </summary>
        [Fact]
        public void TopScorersBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.TopScorersBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportTopScorersBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test TopScorersByStageId
        /// </summary>
        [Fact]
        public void TopScorersByStageIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int stageId = null;
            //var response = instance.TopScorersByStageId(version, sport, stageId);
            //Assert.IsType<SportTopScorersByStageIdResponse>(response);
        }

        /// <summary>
        /// Test TranfersByDateRange
        /// </summary>
        [Fact]
        public void TranfersByDateRangeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string startDate = null;
            //string endDate = null;
            //var response = instance.TranfersByDateRange(version, sport, startDate, endDate);
            //Assert.IsType<SportTranfersByDateRangeResponse>(response);
        }

        /// <summary>
        /// Test TransferById
        /// </summary>
        [Fact]
        public void TransferByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int transferId = null;
            //var response = instance.TransferById(version, sport, transferId);
            //Assert.IsType<SportTransferByIdResponse>(response);
        }

        /// <summary>
        /// Test TransfersAll
        /// </summary>
        [Fact]
        public void TransfersAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.TransfersAll(version, sport);
            //Assert.IsType<SportTransfersAllResponse>(response);
        }

        /// <summary>
        /// Test TransfersByPlayerId
        /// </summary>
        [Fact]
        public void TransfersByPlayerIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int playerId = null;
            //var response = instance.TransfersByPlayerId(version, sport, playerId);
            //Assert.IsType<SportTransfersByPlayerIdResponse>(response);
        }

        /// <summary>
        /// Test TransfersByTeamId
        /// </summary>
        [Fact]
        public void TransfersByTeamIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int teamId = null;
            //var response = instance.TransfersByTeamId(version, sport, teamId);
            //Assert.IsType<SportTransfersByTeamIdResponse>(response);
        }

        /// <summary>
        /// Test TransfersLatest
        /// </summary>
        [Fact]
        public void TransfersLatestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.TransfersLatest(version, sport);
            //Assert.IsType<SportTransfersLatestResponse>(response);
        }

        /// <summary>
        /// Test TvStationById
        /// </summary>
        [Fact]
        public void TvStationByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int tvStationId = null;
            //var response = instance.TvStationById(version, sport, tvStationId);
            //Assert.IsType<SportTvStationByIdResponse>(response);
        }

        /// <summary>
        /// Test TvStationsAll
        /// </summary>
        [Fact]
        public void TvStationsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.TvStationsAll(version, sport);
            //Assert.IsType<SportTvStationsAllResponse>(response);
        }

        /// <summary>
        /// Test TvStationsByFixtureId
        /// </summary>
        [Fact]
        public void TvStationsByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int fixtureId = null;
            //var response = instance.TvStationsByFixtureId(version, sport, fixtureId);
            //Assert.IsType<SportTvStationsByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test VenueById
        /// </summary>
        [Fact]
        public void VenueByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int venueId = null;
            //var response = instance.VenueById(version, sport, venueId);
            //Assert.IsType<SportVenueByIdResponse>(response);
        }

        /// <summary>
        /// Test VenuesAll
        /// </summary>
        [Fact]
        public void VenuesAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //var response = instance.VenuesAll(version, sport);
            //Assert.IsType<SportVenuesAllResponse>(response);
        }

        /// <summary>
        /// Test VenuesBySeasonId
        /// </summary>
        [Fact]
        public void VenuesBySeasonIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //int seasonId = null;
            //var response = instance.VenuesBySeasonId(version, sport, seasonId);
            //Assert.IsType<SportVenuesBySeasonIdResponse>(response);
        }

        /// <summary>
        /// Test VenuesSearch
        /// </summary>
        [Fact]
        public void VenuesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //string sport = null;
            //string name = null;
            //var response = instance.VenuesSearch(version, sport, name);
            //Assert.IsType<SportVenuesSearchResponse>(response);
        }
    }
}
