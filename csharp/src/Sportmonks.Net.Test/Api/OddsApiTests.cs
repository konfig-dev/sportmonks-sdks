/*
 * SportMonks
 *
 * Surpass the competition with superior sports data
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Sportmonks.Net.Client;
using Sportmonks.Net.Api;
// uncomment below to import models
//using Sportmonks.Net.Model;

namespace Sportmonks.Net.Test.Api
{
    /// <summary>
    ///  Class for testing OddsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OddsApiTests : IDisposable
    {
        private OddsApi instance;

        public OddsApiTests()
        {
            instance = new OddsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OddsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OddsApi
            //Assert.IsType<OddsApi>(instance);
        }

        /// <summary>
        /// Test BookmakerById
        /// </summary>
        [Fact]
        public void BookmakerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int bookmakerId = null;
            //string version = null;
            //var response = instance.BookmakerById(bookmakerId, version);
            //Assert.IsType<OddsBookmakerByIdResponse>(response);
        }

        /// <summary>
        /// Test BookmakersAll
        /// </summary>
        [Fact]
        public void BookmakersAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //var response = instance.BookmakersAll(version);
            //Assert.IsType<OddsBookmakersAllResponse>(response);
        }

        /// <summary>
        /// Test BookmakersByFixtureId
        /// </summary>
        [Fact]
        public void BookmakersByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int fixtureId = null;
            //string version = null;
            //var response = instance.BookmakersByFixtureId(fixtureId, version);
            //Assert.IsType<OddsBookmakersByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test BookmakersMappingByFixtureId
        /// </summary>
        [Fact]
        public void BookmakersMappingByFixtureIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int fixtureId = null;
            //string version = null;
            //var response = instance.BookmakersMappingByFixtureId(fixtureId, version);
            //Assert.IsType<OddsBookmakersMappingByFixtureIdResponse>(response);
        }

        /// <summary>
        /// Test BookmakersSearch
        /// </summary>
        [Fact]
        public void BookmakersSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string version = null;
            //var response = instance.BookmakersSearch(name, version);
            //Assert.IsType<OddsBookmakersSearchResponse>(response);
        }

        /// <summary>
        /// Test FixturesUpcomingByMarketId
        /// </summary>
        [Fact]
        public void FixturesUpcomingByMarketIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int marketId = null;
            //string version = null;
            //string sport = null;
            //var response = instance.FixturesUpcomingByMarketId(marketId, version, sport);
            //Assert.IsType<OddsFixturesUpcomingByMarketIdResponse>(response);
        }

        /// <summary>
        /// Test MarketById
        /// </summary>
        [Fact]
        public void MarketByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int marketId = null;
            //string version = null;
            //var response = instance.MarketById(marketId, version);
            //Assert.IsType<OddsMarketByIdResponse>(response);
        }

        /// <summary>
        /// Test MarketsAll
        /// </summary>
        [Fact]
        public void MarketsAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string version = null;
            //var response = instance.MarketsAll(version);
            //Assert.IsType<OddsMarketsAllResponse>(response);
        }

        /// <summary>
        /// Test MarketsSearch
        /// </summary>
        [Fact]
        public void MarketsSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string version = null;
            //var response = instance.MarketsSearch(name, version);
            //Assert.IsType<OddsMarketsSearchResponse>(response);
        }
    }
}
